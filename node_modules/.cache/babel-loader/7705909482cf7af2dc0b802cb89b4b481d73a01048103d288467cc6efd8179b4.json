{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport function useVoiceInput({\n  onResult,\n  listening,\n  autoRestart\n}) {\n  _s();\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    if (!('webkitSpeechRecognition' in window)) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n    recognition.onresult = event => {\n      const transcript = Array.from(event.results).map(r => r[0].transcript).join('');\n      onResult(transcript);\n    };\n    recognition.onend = () => {\n      if (autoRestart && listening) recognition.start();\n    };\n    recognitionRef.current = recognition;\n  }, [onResult, autoRestart, listening]);\n  useEffect(() => {\n    if (listening && recognitionRef.current) recognitionRef.current.start();else if (recognitionRef.current) recognitionRef.current.stop();\n    // eslint-disable-next-line\n  }, [listening]);\n  return {\n    stop: () => recognitionRef.current && recognitionRef.current.stop(),\n    start: () => recognitionRef.current && recognitionRef.current.start()\n  };\n}\n_s(useVoiceInput, \"b65A8z4AimpDV0Yt7kEvmBgfp7M=\");","map":{"version":3,"names":["useEffect","useRef","useVoiceInput","onResult","listening","autoRestart","_s","recognitionRef","window","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","r","join","onend","start","current","stop"],"sources":["C:/joebot/src/hooks/useVoiceInput.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nexport function useVoiceInput({ onResult, listening, autoRestart }) {\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!('webkitSpeechRecognition' in window)) return;\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = false;\r\n    recognition.lang = \"en-US\";\r\n    recognition.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map(r => r[0].transcript)\r\n        .join('');\r\n      onResult(transcript);\r\n    };\r\n    recognition.onend = () => {\r\n      if (autoRestart && listening) recognition.start();\r\n    };\r\n    recognitionRef.current = recognition;\r\n  }, [onResult, autoRestart, listening]);\r\n\r\n  useEffect(() => {\r\n    if (listening && recognitionRef.current) recognitionRef.current.start();\r\n    else if (recognitionRef.current) recognitionRef.current.stop();\r\n    // eslint-disable-next-line\r\n  }, [listening]);\r\n\r\n  return {\r\n    stop: () => recognitionRef.current && recognitionRef.current.stop(),\r\n    start: () => recognitionRef.current && recognitionRef.current.start(),\r\n  };\r\n} "],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,SAASC,aAAaA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAMC,cAAc,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,IAAI,EAAE,yBAAyB,IAAIQ,MAAM,CAAC,EAAE;IAC5C,MAAMC,WAAW,GAAG,IAAID,MAAM,CAACE,uBAAuB,CAAC,CAAC;IACxDD,WAAW,CAACE,UAAU,GAAG,IAAI;IAC7BF,WAAW,CAACG,cAAc,GAAG,KAAK;IAClCH,WAAW,CAACI,IAAI,GAAG,OAAO;IAC1BJ,WAAW,CAACK,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC,CACzCC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAACL,UAAU,CAAC,CACzBM,IAAI,CAAC,EAAE,CAAC;MACXnB,QAAQ,CAACa,UAAU,CAAC;IACtB,CAAC;IACDP,WAAW,CAACc,KAAK,GAAG,MAAM;MACxB,IAAIlB,WAAW,IAAID,SAAS,EAAEK,WAAW,CAACe,KAAK,CAAC,CAAC;IACnD,CAAC;IACDjB,cAAc,CAACkB,OAAO,GAAGhB,WAAW;EACtC,CAAC,EAAE,CAACN,QAAQ,EAAEE,WAAW,EAAED,SAAS,CAAC,CAAC;EAEtCJ,SAAS,CAAC,MAAM;IACd,IAAII,SAAS,IAAIG,cAAc,CAACkB,OAAO,EAAElB,cAAc,CAACkB,OAAO,CAACD,KAAK,CAAC,CAAC,CAAC,KACnE,IAAIjB,cAAc,CAACkB,OAAO,EAAElB,cAAc,CAACkB,OAAO,CAACC,IAAI,CAAC,CAAC;IAC9D;EACF,CAAC,EAAE,CAACtB,SAAS,CAAC,CAAC;EAEf,OAAO;IACLsB,IAAI,EAAEA,CAAA,KAAMnB,cAAc,CAACkB,OAAO,IAAIlB,cAAc,CAACkB,OAAO,CAACC,IAAI,CAAC,CAAC;IACnEF,KAAK,EAAEA,CAAA,KAAMjB,cAAc,CAACkB,OAAO,IAAIlB,cAAc,CAACkB,OAAO,CAACD,KAAK,CAAC;EACtE,CAAC;AACH;AAAClB,EAAA,CA/BeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}