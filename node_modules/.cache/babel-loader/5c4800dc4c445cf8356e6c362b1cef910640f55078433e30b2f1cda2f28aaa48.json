{"ast":null,"code":"var _jsxFileName = \"C:\\\\joebot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport BotAvatar from \"./components/BotAvatar\";\nimport ChatBubble from \"./components/ChatBubble\";\nimport Controls from \"./components/Controls\";\nimport ThemeToggle from \"./components/ThemeToggle\";\nimport VoiceOutput from \"./components/VoiceOutput\";\nimport { useVoiceInput } from \"./hooks/useVoiceInput\";\nimport { useVoiceOutput } from \"./hooks/useVoiceOutput\";\nimport { useDialogueLoop } from \"./hooks/useDialogueLoop\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  const [chat, setChat] = useState([]); // {sender: 'user'|'bot', text}\n  const [isActive, setIsActive] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [listening, setListening] = useState(false);\n\n  // Ensure listening is toggled off and on after TTS ends\n  const handleVoiceEnd = useCallback(() => {\n    setListening(false);\n    setTimeout(() => setListening(true), 150);\n  }, []);\n  const {\n    speak,\n    audioRef\n  } = useVoiceOutput({\n    onEnd: handleVoiceEnd\n  });\n  const {\n    handleUserSpeech\n  } = useDialogueLoop({\n    speak: isMuted ? async () => {} : speak,\n    onBotMessage: msg => setChat(c => [...c, {\n      sender: msg.role === \"assistant\" ? \"bot\" : \"user\",\n      text: msg.content\n    }]),\n    setListening\n  });\n  useVoiceInput({\n    onResult: txt => {\n      if (txt.trim()) handleUserSpeech(txt.trim());\n    },\n    listening: isActive && listening,\n    autoRestart: true\n  });\n  const handleStart = useCallback(() => {\n    setChat([]);\n    setIsActive(true);\n    setListening(true);\n  }, []);\n  const handleMute = useCallback(() => setIsMuted(m => !m), []);\n  const handleEnd = useCallback(() => {\n    setIsActive(false);\n    setListening(false);\n  }, []);\n  const handleThemeToggle = useCallback(() => setTheme(t => t === \"dark\" ? \"light\" : \"dark\"), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n      theme: theme,\n      onToggle: handleThemeToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-area\",\n        children: /*#__PURE__*/_jsxDEV(BotAvatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n          text: msg.text,\n          sender: msg.sender\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        onStart: handleStart,\n        onMute: handleMute,\n        onEnd: handleEnd,\n        isActive: isActive,\n        isMuted: isMuted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoiceOutput, {\n        ref: audioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Anik1l/7J6tIQd1JUtmuRDd6Emg=\", false, function () {\n  return [useVoiceOutput, useDialogueLoop, useVoiceInput];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","BotAvatar","ChatBubble","Controls","ThemeToggle","VoiceOutput","useVoiceInput","useVoiceOutput","useDialogueLoop","jsxDEV","_jsxDEV","App","_s","theme","setTheme","chat","setChat","isActive","setIsActive","isMuted","setIsMuted","listening","setListening","handleVoiceEnd","setTimeout","speak","audioRef","onEnd","handleUserSpeech","onBotMessage","msg","c","sender","role","text","content","onResult","txt","trim","autoRestart","handleStart","handleMute","m","handleEnd","handleThemeToggle","t","className","children","onToggle","fileName","_jsxFileName","lineNumber","columnNumber","map","i","onStart","onMute","ref","_c","$RefreshReg$"],"sources":["C:/joebot/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport BotAvatar from \"./components/BotAvatar\";\r\nimport ChatBubble from \"./components/ChatBubble\";\r\nimport Controls from \"./components/Controls\";\r\nimport ThemeToggle from \"./components/ThemeToggle\";\r\nimport VoiceOutput from \"./components/VoiceOutput\";\r\nimport { useVoiceInput } from \"./hooks/useVoiceInput\";\r\nimport { useVoiceOutput } from \"./hooks/useVoiceOutput\";\r\nimport { useDialogueLoop } from \"./hooks/useDialogueLoop\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [chat, setChat] = useState([]); // {sender: 'user'|'bot', text}\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [listening, setListening] = useState(false);\r\n\r\n  // Ensure listening is toggled off and on after TTS ends\r\n  const handleVoiceEnd = useCallback(() => {\r\n    setListening(false);\r\n    setTimeout(() => setListening(true), 150);\r\n  }, []);\r\n\r\n  const { speak, audioRef } = useVoiceOutput({\r\n    onEnd: handleVoiceEnd\r\n  });\r\n  const { handleUserSpeech } = useDialogueLoop({\r\n    speak: isMuted ? async () => {} : speak,\r\n    onBotMessage: msg => setChat(c => [...c, { sender: msg.role === \"assistant\" ? \"bot\" : \"user\", text: msg.content }]),\r\n    setListening\r\n  });\r\n  useVoiceInput({\r\n    onResult: txt => {\r\n      if (txt.trim()) handleUserSpeech(txt.trim());\r\n    },\r\n    listening: isActive && listening,\r\n    autoRestart: true\r\n  });\r\n\r\n  const handleStart = useCallback(() => {\r\n    setChat([]);\r\n    setIsActive(true);\r\n    setListening(true);\r\n  }, []);\r\n\r\n  const handleMute = useCallback(() => setIsMuted(m => !m), []);\r\n  const handleEnd = useCallback(() => {\r\n    setIsActive(false);\r\n    setListening(false);\r\n  }, []);\r\n\r\n  const handleThemeToggle = useCallback(() => setTheme(t => (t === \"dark\" ? \"light\" : \"dark\")), []);\r\n\r\n  return (\r\n    <div className={`app-container ${theme}`}>\r\n      <ThemeToggle theme={theme} onToggle={handleThemeToggle} />\r\n      <div className=\"main-area\">\r\n        <div className=\"avatar-area\">\r\n          <BotAvatar />\r\n        </div>\r\n        <div className=\"chat-area\">\r\n          {chat.map((msg, i) => (\r\n            <ChatBubble key={i} text={msg.text} sender={msg.sender} />\r\n          ))}\r\n        </div>\r\n        <Controls\r\n          onStart={handleStart}\r\n          onMute={handleMute}\r\n          onEnd={handleEnd}\r\n          isActive={isActive}\r\n          isMuted={isMuted}\r\n        />\r\n        <VoiceOutput ref={audioRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}