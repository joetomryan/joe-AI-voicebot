{"ast":null,"code":"var _jsxFileName = \"C:\\\\joebot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from \"react\";\nimport BotAvatar from \"./components/BotAvatar\";\nimport ChatBubble from \"./components/ChatBubble\";\nimport Controls from \"./components/Controls\";\nimport ThemeToggle from \"./components/ThemeToggle\";\nimport VoiceOutput from \"./components/VoiceOutput\";\nimport { useVoiceInput } from \"./hooks/useVoiceInput\";\nimport { useVoiceOutput } from \"./hooks/useVoiceOutput\";\nimport { useDialogueLoop } from \"./hooks/useDialogueLoop\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  const [chat, setChat] = useState([]); // {sender: 'user'|'bot', text}\n  const [isActive, setIsActive] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n\n  // Refs to avoid stale closures\n  const handleUserSpeechRef = useRef();\n  const voiceInput = useVoiceInput({\n    onResult: txt => {\n      if (txt.trim()) handleUserSpeechRef.current(txt.trim());\n    }\n  });\n  const {\n    speak,\n    audioRef\n  } = useVoiceOutput({\n    onEnd: () => {\n      setTimeout(() => {\n        if (isActive) voiceInput.start();\n      }, 200);\n    }\n  });\n  const {\n    handleUserSpeech\n  } = useDialogueLoop({\n    speak: isMuted ? async () => {} : speak,\n    onBotMessage: msg => setChat(c => [...c, {\n      sender: msg.role === \"assistant\" ? \"bot\" : \"user\",\n      text: msg.content\n    }]),\n    setListening: () => {} // not used anymore\n  });\n  handleUserSpeechRef.current = handleUserSpeech;\n  const handleStart = useCallback(() => {\n    setChat([]);\n    setIsActive(true);\n    setTimeout(() => voiceInput.start(), 200);\n  }, [voiceInput]);\n  const handleMute = useCallback(() => setIsMuted(m => !m), []);\n  const handleEnd = useCallback(() => {\n    setIsActive(false);\n    voiceInput.stop();\n  }, [voiceInput]);\n  const handleThemeToggle = useCallback(() => setTheme(t => t === \"dark\" ? \"light\" : \"dark\"), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n      theme: theme,\n      onToggle: handleThemeToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-area\",\n        children: /*#__PURE__*/_jsxDEV(BotAvatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n          text: msg.text,\n          sender: msg.sender\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        onStart: handleStart,\n        onMute: handleMute,\n        onEnd: handleEnd,\n        isActive: isActive,\n        isMuted: isMuted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoiceOutput, {\n        ref: audioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lhQlQOza03/1ekc9+Nwsl9q0mbw=\", false, function () {\n  return [useVoiceInput, useVoiceOutput, useDialogueLoop];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useRef","BotAvatar","ChatBubble","Controls","ThemeToggle","VoiceOutput","useVoiceInput","useVoiceOutput","useDialogueLoop","jsxDEV","_jsxDEV","App","_s","theme","setTheme","chat","setChat","isActive","setIsActive","isMuted","setIsMuted","handleUserSpeechRef","voiceInput","onResult","txt","trim","current","speak","audioRef","onEnd","setTimeout","start","handleUserSpeech","onBotMessage","msg","c","sender","role","text","content","setListening","handleStart","handleMute","m","handleEnd","stop","handleThemeToggle","t","className","children","onToggle","fileName","_jsxFileName","lineNumber","columnNumber","map","i","onStart","onMute","ref","_c","$RefreshReg$"],"sources":["C:/joebot/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\r\nimport BotAvatar from \"./components/BotAvatar\";\r\nimport ChatBubble from \"./components/ChatBubble\";\r\nimport Controls from \"./components/Controls\";\r\nimport ThemeToggle from \"./components/ThemeToggle\";\r\nimport VoiceOutput from \"./components/VoiceOutput\";\r\nimport { useVoiceInput } from \"./hooks/useVoiceInput\";\r\nimport { useVoiceOutput } from \"./hooks/useVoiceOutput\";\r\nimport { useDialogueLoop } from \"./hooks/useDialogueLoop\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [chat, setChat] = useState([]); // {sender: 'user'|'bot', text}\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n\r\n  // Refs to avoid stale closures\r\n  const handleUserSpeechRef = useRef();\r\n  const voiceInput = useVoiceInput({\r\n    onResult: txt => {\r\n      if (txt.trim()) handleUserSpeechRef.current(txt.trim());\r\n    }\r\n  });\r\n\r\n  const { speak, audioRef } = useVoiceOutput({\r\n    onEnd: () => {\r\n      setTimeout(() => {\r\n        if (isActive) voiceInput.start();\r\n      }, 200);\r\n    }\r\n  });\r\n\r\n  const { handleUserSpeech } = useDialogueLoop({\r\n    speak: isMuted ? async () => {} : speak,\r\n    onBotMessage: msg => setChat(c => [...c, { sender: msg.role === \"assistant\" ? \"bot\" : \"user\", text: msg.content }]),\r\n    setListening: () => {} // not used anymore\r\n  });\r\n  handleUserSpeechRef.current = handleUserSpeech;\r\n\r\n  const handleStart = useCallback(() => {\r\n    setChat([]);\r\n    setIsActive(true);\r\n    setTimeout(() => voiceInput.start(), 200);\r\n  }, [voiceInput]);\r\n\r\n  const handleMute = useCallback(() => setIsMuted(m => !m), []);\r\n  const handleEnd = useCallback(() => {\r\n    setIsActive(false);\r\n    voiceInput.stop();\r\n  }, [voiceInput]);\r\n\r\n  const handleThemeToggle = useCallback(() => setTheme(t => (t === \"dark\" ? \"light\" : \"dark\")), []);\r\n\r\n  return (\r\n    <div className={`app-container ${theme}`}>\r\n      <ThemeToggle theme={theme} onToggle={handleThemeToggle} />\r\n      <div className=\"main-area\">\r\n        <div className=\"avatar-area\">\r\n          <BotAvatar />\r\n        </div>\r\n        <div className=\"chat-area\">\r\n          {chat.map((msg, i) => (\r\n            <ChatBubble key={i} text={msg.text} sender={msg.sender} />\r\n          ))}\r\n        </div>\r\n        <Controls\r\n          onStart={handleStart}\r\n          onMute={handleMute}\r\n          onEnd={handleEnd}\r\n          isActive={isActive}\r\n          isMuted={isMuted}\r\n        />\r\n        <VoiceOutput ref={audioRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}