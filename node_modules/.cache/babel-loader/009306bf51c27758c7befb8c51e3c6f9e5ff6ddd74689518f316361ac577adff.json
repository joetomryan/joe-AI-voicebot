{"ast":null,"code":"import React,{useState,useCallback,useRef,useEffect}from\"react\";import BotAvatar from\"./components/BotAvatar\";import ChatBubble from\"./components/ChatBubble\";import Controls from\"./components/Controls\";import VoiceOutput from\"./components/VoiceOutput\";import{useVoiceInput}from\"./hooks/useVoiceInput\";import{useVoiceOutput}from\"./hooks/useVoiceOutput\";import{useDialogueLoop}from\"./hooks/useDialogueLoop\";import\"./styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[chat,setChat]=useState([]);// {sender: 'user'|'bot', text}\nconst[isActive,setIsActive]=useState(false);const chatAreaRef=useRef(null);// Refs to avoid stale closures\nconst handleUserSpeechRef=useRef();const voiceInput=useVoiceInput({onResult:txt=>{if(txt.trim())handleUserSpeechRef.current(txt.trim());}});const{speak,audioRef}=useVoiceOutput({onEnd:()=>{setTimeout(()=>{if(isActive)voiceInput.start();},200);}});const{handleUserSpeech}=useDialogueLoop({speak,onBotMessage:msg=>setChat(c=>[...c,{sender:msg.role===\"assistant\"?\"bot\":\"user\",text:msg.content}]),setListening:()=>{}});handleUserSpeechRef.current=handleUserSpeech;const handleStart=useCallback(()=>{setChat([]);setIsActive(true);setTimeout(()=>voiceInput.start(),200);},[voiceInput]);const handleEnd=useCallback(()=>{setIsActive(false);voiceInput.stop();},[voiceInput]);// Auto-scroll chat to bottom on new message\nuseEffect(()=>{if(chatAreaRef.current){chatAreaRef.current.scrollTop=chatAreaRef.current.scrollHeight;}},[chat]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"comic-header\",children:\"JoeBot\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-area\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar-area\",children:/*#__PURE__*/_jsx(BotAvatar,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-area\",ref:chatAreaRef,children:chat.map((msg,i)=>/*#__PURE__*/_jsx(ChatBubble,{text:msg.text,sender:msg.sender},i))}),/*#__PURE__*/_jsx(Controls,{onStart:handleStart,onEnd:handleEnd,isActive:isActive}),/*#__PURE__*/_jsx(VoiceOutput,{ref:audioRef})]})]});}","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","BotAvatar","ChatBubble","Controls","VoiceOutput","useVoiceInput","useVoiceOutput","useDialogueLoop","jsx","_jsx","jsxs","_jsxs","App","chat","setChat","isActive","setIsActive","chatAreaRef","handleUserSpeechRef","voiceInput","onResult","txt","trim","current","speak","audioRef","onEnd","setTimeout","start","handleUserSpeech","onBotMessage","msg","c","sender","role","text","content","setListening","handleStart","handleEnd","stop","scrollTop","scrollHeight","className","children","ref","map","i","onStart"],"sources":["C:/joebot/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport BotAvatar from \"./components/BotAvatar\";\r\nimport ChatBubble from \"./components/ChatBubble\";\r\nimport Controls from \"./components/Controls\";\r\nimport VoiceOutput from \"./components/VoiceOutput\";\r\nimport { useVoiceInput } from \"./hooks/useVoiceInput\";\r\nimport { useVoiceOutput } from \"./hooks/useVoiceOutput\";\r\nimport { useDialogueLoop } from \"./hooks/useDialogueLoop\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const [chat, setChat] = useState([]); // {sender: 'user'|'bot', text}\r\n  const [isActive, setIsActive] = useState(false);\r\n  const chatAreaRef = useRef(null);\r\n\r\n  // Refs to avoid stale closures\r\n  const handleUserSpeechRef = useRef();\r\n  const voiceInput = useVoiceInput({\r\n    onResult: txt => {\r\n      if (txt.trim()) handleUserSpeechRef.current(txt.trim());\r\n    }\r\n  });\r\n\r\n  const { speak, audioRef } = useVoiceOutput({\r\n    onEnd: () => {\r\n      setTimeout(() => {\r\n        if (isActive) voiceInput.start();\r\n      }, 200);\r\n    }\r\n  });\r\n\r\n  const { handleUserSpeech } = useDialogueLoop({\r\n    speak,\r\n    onBotMessage: msg => setChat(c => [...c, { sender: msg.role === \"assistant\" ? \"bot\" : \"user\", text: msg.content }]),\r\n    setListening: () => {}\r\n  });\r\n  handleUserSpeechRef.current = handleUserSpeech;\r\n\r\n  const handleStart = useCallback(() => {\r\n    setChat([]);\r\n    setIsActive(true);\r\n    setTimeout(() => voiceInput.start(), 200);\r\n  }, [voiceInput]);\r\n\r\n  const handleEnd = useCallback(() => {\r\n    setIsActive(false);\r\n    voiceInput.stop();\r\n  }, [voiceInput]);\r\n\r\n  // Auto-scroll chat to bottom on new message\r\n  useEffect(() => {\r\n    if (chatAreaRef.current) {\r\n      chatAreaRef.current.scrollTop = chatAreaRef.current.scrollHeight;\r\n    }\r\n  }, [chat]);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"comic-header\">JoeBot</div>\r\n      <div className=\"main-area\">\r\n        <div className=\"avatar-area\">\r\n          <BotAvatar />\r\n        </div>\r\n        <div className=\"chat-area\" ref={chatAreaRef}>\r\n          {chat.map((msg, i) => (\r\n            <ChatBubble key={i} text={msg.text} sender={msg.sender} />\r\n          ))}\r\n        </div>\r\n        <Controls\r\n          onStart={handleStart}\r\n          onEnd={handleEnd}\r\n          isActive={isActive}\r\n        />\r\n        <VoiceOutput ref={audioRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,WAAW,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CACvE,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,OAASC,aAAa,KAAQ,uBAAuB,CACrD,OAASC,cAAc,KAAQ,wBAAwB,CACvD,OAASC,eAAe,KAAQ,yBAAyB,CACzD,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAE;AACtC,KAAM,CAACkB,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAAoB,WAAW,CAAGlB,MAAM,CAAC,IAAI,CAAC,CAEhC;AACA,KAAM,CAAAmB,mBAAmB,CAAGnB,MAAM,CAAC,CAAC,CACpC,KAAM,CAAAoB,UAAU,CAAGd,aAAa,CAAC,CAC/Be,QAAQ,CAAEC,GAAG,EAAI,CACf,GAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAEJ,mBAAmB,CAACK,OAAO,CAACF,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzD,CACF,CAAC,CAAC,CAEF,KAAM,CAAEE,KAAK,CAAEC,QAAS,CAAC,CAAGnB,cAAc,CAAC,CACzCoB,KAAK,CAAEA,CAAA,GAAM,CACXC,UAAU,CAAC,IAAM,CACf,GAAIZ,QAAQ,CAAEI,UAAU,CAACS,KAAK,CAAC,CAAC,CAClC,CAAC,CAAE,GAAG,CAAC,CACT,CACF,CAAC,CAAC,CAEF,KAAM,CAAEC,gBAAiB,CAAC,CAAGtB,eAAe,CAAC,CAC3CiB,KAAK,CACLM,YAAY,CAAEC,GAAG,EAAIjB,OAAO,CAACkB,CAAC,EAAI,CAAC,GAAGA,CAAC,CAAE,CAAEC,MAAM,CAAEF,GAAG,CAACG,IAAI,GAAK,WAAW,CAAG,KAAK,CAAG,MAAM,CAAEC,IAAI,CAAEJ,GAAG,CAACK,OAAQ,CAAC,CAAC,CAAC,CACnHC,YAAY,CAAEA,CAAA,GAAM,CAAC,CACvB,CAAC,CAAC,CACFnB,mBAAmB,CAACK,OAAO,CAAGM,gBAAgB,CAE9C,KAAM,CAAAS,WAAW,CAAGxC,WAAW,CAAC,IAAM,CACpCgB,OAAO,CAAC,EAAE,CAAC,CACXE,WAAW,CAAC,IAAI,CAAC,CACjBW,UAAU,CAAC,IAAMR,UAAU,CAACS,KAAK,CAAC,CAAC,CAAE,GAAG,CAAC,CAC3C,CAAC,CAAE,CAACT,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAoB,SAAS,CAAGzC,WAAW,CAAC,IAAM,CAClCkB,WAAW,CAAC,KAAK,CAAC,CAClBG,UAAU,CAACqB,IAAI,CAAC,CAAC,CACnB,CAAC,CAAE,CAACrB,UAAU,CAAC,CAAC,CAEhB;AACAnB,SAAS,CAAC,IAAM,CACd,GAAIiB,WAAW,CAACM,OAAO,CAAE,CACvBN,WAAW,CAACM,OAAO,CAACkB,SAAS,CAAGxB,WAAW,CAACM,OAAO,CAACmB,YAAY,CAClE,CACF,CAAC,CAAE,CAAC7B,IAAI,CAAC,CAAC,CAEV,mBACEF,KAAA,QAAKgC,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BnC,IAAA,QAAKkC,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,QAAM,CAAK,CAAC,cAC1CjC,KAAA,QAAKgC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBnC,IAAA,QAAKkC,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BnC,IAAA,CAACR,SAAS,GAAE,CAAC,CACV,CAAC,cACNQ,IAAA,QAAKkC,SAAS,CAAC,WAAW,CAACE,GAAG,CAAE5B,WAAY,CAAA2B,QAAA,CACzC/B,IAAI,CAACiC,GAAG,CAAC,CAACf,GAAG,CAAEgB,CAAC,gBACftC,IAAA,CAACP,UAAU,EAASiC,IAAI,CAAEJ,GAAG,CAACI,IAAK,CAACF,MAAM,CAAEF,GAAG,CAACE,MAAO,EAAtCc,CAAwC,CAC1D,CAAC,CACC,CAAC,cACNtC,IAAA,CAACN,QAAQ,EACP6C,OAAO,CAAEV,WAAY,CACrBZ,KAAK,CAAEa,SAAU,CACjBxB,QAAQ,CAAEA,QAAS,CACpB,CAAC,cACFN,IAAA,CAACL,WAAW,EAACyC,GAAG,CAAEpB,QAAS,CAAE,CAAC,EAC3B,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}